@import "variables";

.switch {
  display: inline-flex;
  align-items: center;
  margin-bottom: 0;
  cursor: pointer;

  @include hide-native-input;

  .selection-control {
    position: relative;
    width: $switch-width;
    height: $switch-height;

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      content: "";
      background: currentColor;
      border-radius: $switch-border-radius;
      opacity: .2;
      transition: background 300ms;
    }
  }

  .selection-control-label {
    margin-left: $switch-label-margin;
  }

  .check-indicator {
    @include selectable-background-before;

    position: absolute;
    top: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    width: $switch-click-size;
    height: $switch-click-size;
    border-radius: 50%;
    transition: transform 300ms;
    transform: translate3d(-($switch-click-size - $switch-toggle-size) / 2, -50%, 0);

    &::after {
      width: $switch-toggle-size;
      height: $switch-toggle-size;
      content: "";
      background: currentColor;
      border-radius: 50%;
      box-shadow: $switch-toggle-box-shadow;
      transition: background 300ms;
    }
  }

  &.checked .check-indicator,
  input:checked ~ .selection-control .check-indicator {
    color: inherit;
    transform: translate3d($switch-width - $switch-click-size + (($switch-click-size - $switch-toggle-size) / 2), -50%, 0);

    &::after {
      background: currentColor;
    }
  }

  &.disabled .selection-control,
  input:disabled ~ .selection-control {
    opacity: $switch-disabled-opacity;
  }
}

@mixin switch-theme($theme-colors, $dark-theme) {
  $primary-color: map-get($theme-colors, "primary");
  $switch-toggle-color: $switch-toggle-color-light-theme;

  @if ($dark-theme) {
    $switch-toggle-color: $switch-toggle-color-dark-theme;
  }

  .switch {
    .check-indicator::after {
      background: $switch-toggle-color;
    }

    &.checked .selection-control,
    input:checked ~ .selection-control {
      color: $primary-color;
    }
  }
}
