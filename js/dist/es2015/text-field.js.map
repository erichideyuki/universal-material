{"version":3,"sources":["text-field.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,SAAS;IAKlB,YAAY,OAAgB;QACxB,MAAM,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC,iBAAiB,CAA2C,CAAC;QAEjG,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACjC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,GAAG,EAAE;gBAChC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;gBACnC,KAAK,CAAC,KAAK,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YAEvB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;SACzC;aAAM;YACH,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;SACtC;IACL,CAAC;IAED,MAAM,CAAC,oBAAoB;QACvB,MAAM,UAAU,GAAG,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC;SAC5B;IACL,CAAC;CACJ","file":"text-field.js","sourcesContent":["export class TextField {\r\n\r\n    readonly element: Element;\r\n    readonly input: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n    constructor(element: Element) {\r\n        const input = element.querySelector('input, textarea') as HTMLInputElement | HTMLTextAreaElement;\r\n\r\n        if (input) {\r\n            input.addEventListener('focus', () => {\r\n                element.classList.add('focus');\r\n            });\r\n\r\n            input.addEventListener('blur', () => {\r\n                element.classList.remove('focus');\r\n            });\r\n\r\n            input.addEventListener('input', () => {\r\n                this.setEmpty();\r\n            });\r\n\r\n            element.addEventListener('click', () => {\r\n                input.focus();\r\n            });\r\n\r\n            this.input = input;\r\n            this.element = element;\r\n\r\n            this.setEmpty();\r\n        }\r\n    }\r\n\r\n    setEmpty() {\r\n        if (this.input.value) {\r\n            this.element.classList.remove('empty')\r\n        } else {\r\n            this.element.classList.add('empty')\r\n        }\r\n    }\r\n\r\n    static initializeTextFields(): void {\r\n        const textFields = document.querySelectorAll('.text-field');\r\n        for (let i = 0; i < textFields.length; i++) {\r\n            const textField = textFields[i];\r\n            new TextField(textField);\r\n        }\r\n    }\r\n}\r\n"]}